{"version":3,"file":"static/js/733.1d3c2f4b.chunk.js","mappings":"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","sources":["components/BaseComponent.jsx","components/services/MathService.jsx","components/TimerComponent.jsx","components/DashboardComponent.jsx","components/CountdownComponent.jsx","components/CompletedDialogComponent.jsx","components/OperationsComponent.jsx","components/MathComponent.jsx","components/MathWrapperComponent.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { Container, Grid } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport getTheme from \"../theme\";\n\nexport const chalkboard = \"chalkboard\";\nexport const dashboard = \"dashboard\";\n\nconst useStyles = makeStyles((theme) => ({\n  baseContainer: ({ isMobile, pxHeight }) => ({\n    padding: \"2% calc(2% - 10px) 2% 2%\",\n    marginTop: \"5%\",\n    height: pxHeight ?? `calc(100vh - ${isMobile ? 90 : 140}px)`,\n  }),\n  chalkboardContainer: {\n    background: theme.palette.chalkboard.background,\n    backgroundAttachment: \"local\",\n    color: \"white\",\n    border: \"solid\",\n    borderColor: \"black\",\n    borderRadius: theme.shape.borderRadius,\n    borderImage: `url(${process.env.PUBLIC_URL}/wood.png) 200 / 12px`,\n    borderImageOutset: \"8px\",\n    overflow: \"auto\",\n    boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.7)\",\n    transition: \"0.5s\",\n    \"&:hover\": {\n      boxShadow: \"0 12px 24px 0 rgba(0,0,0,0.7)\",\n    },\n    \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n      background: theme.palette.chalkboard.background,\n    },\n    \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n      background: theme.palette.chalkboard.background,\n    },\n  },\n  dashboardContainer: { marginTop: \"0 !important\" },\n}));\n\nexport default function BaseComponent({\n  isMobile,\n  isForm,\n  component,\n  componentType,\n  pxHeight,\n}) {\n  const classes = useStyles({ isMobile, pxHeight });\n  const appliedTheme = createTheme(getTheme(\"dark\"));\n\n  const FormWrapper = useCallback(\n    (props) => {\n      return isForm ? props.formWrapper(props.children) : props.children;\n    },\n    [isForm]\n  );\n\n  return (\n    <ThemeProvider theme={appliedTheme}>\n      <Container className=\"container\">\n        <Grid\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\">\n          {/* Left margin */}\n          <Grid\n            item\n            xs={0}\n            sm={2}></Grid>\n          {/* Middle content */}\n          <Grid\n            item\n            sm={8}>\n            <FormWrapper formWrapper={(children) => <form>{children}</form>}>\n              <Grid\n                container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={`${classes.baseContainer} ${\n                  componentType === dashboard\n                    ? classes.dashboardContainer\n                    : classes.chalkboardContainer\n                }`}\n              >\n                {component}\n              </Grid>\n            </FormWrapper>\n          </Grid>\n          {/* Right Margin */}\n          <Grid\n            item\n            xs={0}\n            sm={2}></Grid>\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import { evaluate } from \"mathjs\";\n\nexport function getOperations(params) {\n  const operators = getOperators(params);\n  let operations = [];\n  for (let i = 0; i < params.amount; i++) {\n    const operation = generateOperation(params, operators);\n    operations.push({\n      id: i + 1,\n      operation,\n      operationText: getWrittenOperation(operation),\n    });\n  }\n  return operations;\n}\n\nexport function getCorrectAnswers(operations) {\n  for (let operation of operations) {\n    if (operation.answer === null || operation.answer === \"\") {\n      operation.isRightAnswer = false;\n    } else if (evaluate(operation.operation) === Number(operation.answer)) {\n      operation.isRightAnswer = true;\n    } else {\n      operation.isRightAnswer = false;\n    }\n    operation.rightAnswer = evaluate(operation.operation);\n  }\n  return operations;\n}\n\nfunction generateOperation(params, operators) {\n  if (params.isTables) {\n    return tablesOperation(params, operators);\n  } else if (!params.isTables) {\n    return mathOperation(params, operators);\n  }\n}\n\nfunction mathOperation(params, operators) {\n  let operation = \"\";\n\n  for (let i = 0; i < params.operands; i++) {\n    let newOperand = getOperand(params.negativeNumbers, params.maximum);\n\n    operation = operation + newOperand;\n\n    if (i < params.operands - 1) {\n      operation = operation + getRandomOperator(operators);\n    }\n  }\n\n  operation = validateOperation(params, operators, operation);\n\n  return operation;\n}\n\nfunction tablesOperation(params, operators) {\n  let operation = \"\";\n  const tables = params.tablesSelection.filter(\n    (t) => t.value && t.label <= params.tablesMaximum\n  );\n  const tableOperand = tables[getRandomInt(0, tables.length - 1)].label;\n  const operand = getOperand(params.negativeNumbers, params.tablesMaximum);\n  const operator = getRandomOperator(operators);\n\n  if (operator === \"*\") {\n    operation = tableOperand + operator + operand;\n  } else if (operator === \"/\") {\n    operation =\n      evaluate(tableOperand + \"*\" + operand) + operator + tableOperand;\n  }\n\n  return operation;\n}\n\nfunction validateOperation(params, operators, operation) {\n  let validatedOperation = operation;\n\n  if (isNaN(evaluate(operation)) || evaluate(operation) === Infinity) {\n    validatedOperation = generateOperation(params, operators);\n  }\n  if (evaluate(operation) % 1 !== 0) {\n    validatedOperation = generateOperation(params, operators);\n  }\n  if (!params.negativeNumbers && evaluate(operation) < 0) {\n    validatedOperation = generateOperation(params, operators);\n  }\n\n  return validatedOperation;\n}\n\nfunction getOperand(negativeNumbers, max) {\n  let operand;\n  if (negativeNumbers) {\n    operand = getRandomInt(1, max).toString();\n    if (getRandomInt(0, 2) === 1) {\n      operand = \"(-\" + operand + \")\";\n    }\n  } else if (!negativeNumbers) {\n    operand = getRandomInt(1, max).toString();\n  }\n  return operand;\n}\n\nfunction getRandomOperator(operators) {\n  const randomIndex = getRandomInt(0, Number(operators.length) - 1);\n\n  return operators[randomIndex];\n}\n\nfunction getOperators(params) {\n  let operators = [];\n  if (params.addition && !params.isTables) {\n    operators.push(\"+\");\n  }\n  if (params.substraction && !params.isTables) {\n    operators.push(\"-\");\n  }\n  if (\n    (!params.isTables && params.multiplication) ||\n    (params.isTables && params.tablesMultiplication)\n  ) {\n    operators.push(\"*\");\n  }\n  if (\n    (!params.isTables && params.division) ||\n    (params.isTables && params.tablesDivision)\n  ) {\n    operators.push(\"/\");\n  }\n  return operators;\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getWrittenOperation(operation) {\n  operation = operation.replaceAll(\"+\", \" + \");\n  operation = operation.replaceAll(\"-\", \" - \");\n  operation = operation.replaceAll(\"( - \", \"(-\");\n  operation = operation.replaceAll(\"*\", \" x \");\n  operation = operation.replaceAll(\"/\", \" ÷ \");\n\n  return operation;\n}\n","import React, {\n  useEffect,\n  useState,\n  useCallback,\n  useRef,\n  useMemo,\n} from \"react\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst timerSize = \"150px\";\nconst timerSizeMobile = \"50px\";\nconst strokeWidth = \"7px\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: (isMdPlus) => ({\n    position: \"relative\",\n    height: !isMdPlus ? timerSizeMobile : timerSize,\n    width: !isMdPlus ? timerSizeMobile : timerSize,\n  }),\n  rootCircle: {\n    fill: \"none\",\n    stroke: \"none\",\n  },\n  rootPathElapsed: {\n    strokeWidth,\n    stroke: theme.palette.primary.main,\n  },\n  rootLabel: (isMdPlus) => ({\n    position: \"absolute\",\n    height: !isMdPlus ? timerSizeMobile : timerSize,\n    width: !isMdPlus ? timerSizeMobile : timerSize,\n    top: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"48px\",\n  }),\n  rootPathRemaining: {\n    strokeWidth,\n    strokeLinecap: \"round\",\n    transform: \"rotate(90deg)\",\n    transformOrigin: \"center\",\n    transition: \"1s linear all\",\n    stroke: \"currentcolor\",\n  },\n  green: {\n    color: theme.palette.success.main,\n  },\n  orange: { color: \"orange\" },\n  red: { color: theme.palette.error.main },\n  rootSvg: {\n    transform: \"scaleX(-1)\",\n  },\n}));\n\nexport default function TimerComponent({\n  start,\n  end,\n  timeLimit,\n  timeLeft,\n  setTimeLeft,\n  isMdPlus,\n}) {\n  const classes = useStyles(isMdPlus);\n\n  const fullDashArray = 283;\n  const warningThreshold = Math.floor(timeLimit / 3);\n  const alertThreshold = Math.floor(timeLimit / 6);\n\n  const colorCodes = useMemo(() => {\n    return {\n      info: {\n        color: \"green\",\n      },\n      warning: {\n        color: \"orange\",\n        threshold: warningThreshold,\n      },\n      alert: {\n        color: \"red\",\n        threshold: alertThreshold,\n      },\n    };\n  }, [warningThreshold, alertThreshold]);\n\n  const [remainingPathColor, setRemainingPathColorState] = useState(\n    colorCodes.info.color\n  );\n  const [strokeDashArray, setStrokeDashArray] = useState(283);\n\n  let timerRunning = useRef(false);\n\n  let timerInterval = useRef(null);\n  let timePassed = useRef(0);\n\n  // Divides time left by the defined time limit.\n  const calculateTimeFraction = useCallback(() => {\n    const rawTimeFraction = timeLeft / timeLimit;\n    return rawTimeFraction - (1 / timeLimit) * (1 - rawTimeFraction);\n  }, [timeLeft, timeLimit]);\n\n  // Update the dasharray value as time passes, starting with 283\n  const setCircleDasharray = useCallback(() => {\n    const circleDasharray = `${(\n      calculateTimeFraction() * fullDashArray\n    ).toFixed(0)} 283`;\n\n    setStrokeDashArray(circleDasharray);\n  }, [calculateTimeFraction]);\n\n  const setRemainingPathColor = useCallback(() => {\n    const { alert, warning } = colorCodes;\n\n    if (timeLeft <= alert.threshold) {\n      setRemainingPathColorState(alert.color);\n    } else if (timeLeft <= warning.threshold) {\n      setRemainingPathColorState(warning.color);\n    }\n  }, [timeLeft, colorCodes]);\n\n  const startTimer = useCallback(() => {\n    timerRunning.current = true;\n\n    timerInterval.current = setInterval(() => {\n      // The amount of time passed increments by one\n      timePassed.current++;\n      setTimeLeft(timeLeft - timePassed.current);\n    }, 1000);\n  }, [setTimeLeft, timeLeft]);\n\n  useEffect(() => {\n    setCircleDasharray();\n    setRemainingPathColor(timeLeft);\n\n    if ((timeLeft === 0 && timerRunning.current) || end) {\n      clearInterval(timerInterval.current);\n      timerRunning.current = false;\n    }\n  }, [timeLeft, end, setCircleDasharray, setRemainingPathColor]);\n\n  useEffect(() => {\n    if (start && !timerRunning.current && timeLeft > 0 && !end) {\n      startTimer();\n    }\n  }, [start, timeLeft, end, startTimer]);\n\n  function formatTime(time) {\n    // The largest round integer less than or equal to the result of time divided being by 60.\n    const minutes = Math.floor(time / 60);\n\n    // Seconds are the remainder of the time divided by 60 (modulus operator)\n    let seconds = time % 60;\n\n    // If the value of seconds is less than 10, then display seconds with a leading zero\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n\n    // The output in MM:SS format\n    return `${minutes}:${seconds}`;\n  }\n\n  return (\n    <div className={classes.root}>\n      {isMdPlus ? (\n        <svg\n          className={classes.rootSvg}\n          viewBox=\"0 0 100 100\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g className={classes.rootCircle}>\n            <circle\n              className={classes.rootPathElapsed}\n              cx=\"50\"\n              cy=\"50\"\n              r=\"45\"\n            />\n            <path\n              id=\"base-timer-path-remaining\"\n              strokeDasharray={strokeDashArray}\n              className={`${classes.rootPathRemaining} ${classes[remainingPathColor]}`}\n              d=\"\n            M 50, 50\n            m -45, 0\n            a 45,45 0 1,0 90,0\n            a 45,45 0 1,0 -90,0\n          \"\n            ></path>\n          </g>\n        </svg>\n      ) : null}\n      <span\n        id=\"base-timer-label\"\n        className={classes.rootLabel}>\n        {formatTime(timeLeft)}\n      </span>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { Grid, Typography, Button, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport TimerComponent from \"./TimerComponent\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"sticky\",\n    top: \"-3%\",\n    padding: \"2%\",\n    zIndex: 2,\n    width: \"100%\",\n  },\n  flexCenter: { display: \"flex\", justifyContent: \"center\" },\n  rowPadding: { paddingTop: \"3%\" },\n  stickyPadding: { paddingBottom: \"3%\" },\n  progressIndicator: { fontSize: \"36px\" },\n}));\n\nexport default function DashboardComponent({\n  params,\n  operations,\n  start,\n  countdonwnStart,\n  setCountdownStart,\n  countdownEnded,\n  timeLimit,\n  timeLeft,\n  setTimeLeft,\n  setOpenCompletedDialog,\n  end,\n  setEnd,\n  progress,\n  isMobile,\n  isMdPlus,\n}) {\n  const classes = useStyles();\n  const [t] = useTranslation();\n\n  return (\n    <Box className={classes.root}>\n      <Grid\n        container\n        justifyContent=\"space-around\"\n        alignItems=\"center\">\n        <Grid\n          xs={12}\n          md={4}\n          item\n          order={{ xs: 2, sm: 1 }}\n          className={classes.stickyPadding}\n        >\n          {!isMobile || !params.isTime ? (\n            <span className={classes.progressIndicator}>\n              {operations.filter((o) => o.answer).length}/{operations.length}\n            </span>\n          ) : null}\n          <LinearProgress\n            color=\"primary\"\n            variant=\"determinate\"\n            value={progress}\n          />\n        </Grid>\n        {params.isTime ? (\n          <Grid\n            item\n            xs={12}\n            md={4}\n            order={{ xs: 1, sm: 3 }}\n            className={classes.flexCenter + \" \" + classes.stickyPadding}\n          >\n            <TimerComponent\n              start={start}\n              end={end}\n              timeLimit={timeLimit}\n              timeLeft={timeLeft}\n              setTimeLeft={setTimeLeft}\n              isMdPlus={isMdPlus}\n            />\n          </Grid>\n        ) : null}\n        <Grid\n          item\n          xs={12}\n          md={4}\n          order={{ xs: 3, sm: 2 }}\n          className={\n            (isMobile ? classes.rowPadding : \"\") + \" \" + classes.stickyPadding\n          }\n        >\n          {end ? (\n            <Fragment>\n              <Button\n                variant=\"contained\"\n                component={Link}\n                to={\"/params\"}\n                color=\"primary\"\n              >\n                <Typography>{t(\"math.back\")}</Typography>\n              </Button>\n            </Fragment>\n          ) : start && countdownEnded && !end ? (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              onClick={() => {\n                setEnd(true);\n                setOpenCompletedDialog(true);\n              }}\n            >\n              <Typography color=\"black\">{t(\"math.done\")}</Typography>\n            </Button>\n          ) : (\n            <Button\n              variant=\"contained\"\n              color=\"success\"\n              onClick={() => {\n                if (!countdonwnStart) {\n                  setCountdownStart(true);\n                }\n              }}\n            >\n              <Typography>{t(\"math.start\")}</Typography>\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Grow from \"@mui/material/Grow\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    zIndex: 3,\n    fontSize: 200,\n  },\n}));\n\nexport default function CountdownComponent({\n  countdonwnStart,\n  setCountdownEnded,\n}) {\n  const classes = useStyles();\n  const [countdown, setCountdown] = useState();\n\n  useEffect(() => {\n    if (countdonwnStart) {\n      setCountdown(0);\n    }\n  }, [countdonwnStart]);\n\n  return (\n    <div className={classes.root}>\n      <Grow\n        in={countdown === 0}\n        timeout={500}\n        onEnter={() => {\n          setTimeout(() => {\n            setCountdown(null);\n          }, 1000);\n        }}\n        onExited={() => setCountdown(1)}\n        unmountOnExit\n      >\n        <div>3</div>\n      </Grow>\n      <Grow\n        in={countdown === 1}\n        timeout={500}\n        onEnter={() => {\n          setTimeout(() => {\n            setCountdown(null);\n          }, 1000);\n        }}\n        onExited={() => setCountdown(2)}\n        unmountOnExit\n      >\n        <div>2</div>\n      </Grow>\n      <Grow\n        in={countdown === 2}\n        timeout={500}\n        onEnter={() => {\n          setTimeout(() => {\n            setCountdown(null);\n          }, 1000);\n        }}\n        onExited={() => setCountdown(3)}\n        unmountOnExit\n      >\n        <div>1</div>\n      </Grow>\n      <Grow\n        in={countdown === 3}\n        timeout={500}\n        onEnter={() => {\n          setTimeout(() => {\n            setCountdown(null);\n          }, 1000);\n        }}\n        onExited={() => setCountdownEnded(true)}\n        unmountOnExit\n      >\n        <div>GO!</div>\n      </Grow>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  Slide,\n  Typography,\n} from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide\n    direction=\"up\"\n    ref={ref}\n    {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: { textAlign: \"center\" },\n  rightAnswers: {\n    fontSize: \"28px\",\n    color: theme.palette.success.main,\n  },\n  totalOperations: {\n    fontSize: \"28px\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport default function CompletedDialogComponent({\n  openCompletedDialog,\n  setOpenCompletedDialog,\n  operations,\n  totalTime,\n  isTime,\n}) {\n  const classes = useStyles();\n  const { i18n } = useTranslation();\n  const [t] = useTranslation();\n\n  const handleClose = () => {\n    setOpenCompletedDialog(false);\n  };\n\n  const rightAnswersText = () => {\n    const rightAnswers = operations.filter((o) => o.isRightAnswer).length;\n    const isSingular = (() => {\n      if (i18n.language === \"fr\") {\n        return rightAnswers <= 1;\n      } else {\n        return rightAnswers === 1;\n      }\n    })();\n\n    return (\n      <Fragment>\n        <span className={classes.rightAnswers}>{rightAnswers} </span>\n        {isSingular\n          ? t(\"completed.resultText2singular\")\n          : t(\"completed.resultText2plural\")}\n      </Fragment>\n    );\n  };\n\n  const remainingTimeText = () => {\n    const timeObj = secondsToTime(totalTime);\n\n    const hours =\n      timeObj.hours > 0\n        ? `${timeObj.hours} ${\n          timeObj.hours > 1 ? t(\"completed.hours\") : t(\"completed.hour\")\n        } `\n        : \"\";\n    const minutes =\n      timeObj.minutes > 0\n        ? `${timeObj.minutes} ${\n          timeObj.minutes > 1 ? t(\"completed.minutes\") : t(\"completed.minute\")\n        } `\n        : \"\";\n    const seconds = `${timeObj.seconds} ${\n      timeObj.seconds > 1 ? t(\"completed.seconds\") : t(\"completed.second\")\n    }`;\n\n    return hours + minutes + seconds;\n  };\n\n  const completedText = () => {\n    const rightAnswers = operations.filter((o) => o.isRightAnswer).length;\n    const totalMultiplier = 100 / operations.length;\n    const rightAnswersPourcentage = rightAnswers * totalMultiplier;\n\n    if (rightAnswersPourcentage === 100) {\n      return t(\"completed.done5\");\n    } else if (rightAnswersPourcentage >= 80) {\n      return t(\"completed.done4\");\n    } else if (rightAnswersPourcentage >= 60) {\n      return t(\"completed.done3\");\n    } else if (rightAnswersPourcentage >= 40) {\n      return t(\"completed.done2\");\n    } else if (rightAnswersPourcentage < 40) {\n      return t(\"completed.done1\");\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={openCompletedDialog}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-describedby=\"completed-dialog\"\n      >\n        <DialogContent className={classes.root}>\n          <Typography\n            color=\"primary\"\n            sx={{ fontSize: \"36px\" }}>\n            {t(\"completed.title\")}\n          </Typography>\n          <p>{t(\"completed.result\")}</p>\n          <p>\n            {t(\"completed.resultText1\")} {rightAnswersText()}{\" \"}\n            {t(\"completed.resultText3\")}{\" \"}\n            <span className={classes.totalOperations}>{operations.length}</span>\n            {isTime ? null : \"!\"}\n          </p>\n          {isTime ? (\n            <p>\n              {t(\"completed.resultText4\")}{\" \"}\n              <span className={classes.rightAnswers}>\n                {remainingTimeText()}\n              </span>\n              !\n            </p>\n          ) : null}\n          <Typography\n            color=\"primary\"\n            sx={{ fontSize: \"36px\" }}>\n            {completedText()}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={handleClose}>\n            <Typography>Ok</Typography>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nfunction secondsToTime(secs) {\n  var hours = Math.floor(secs / (60 * 60));\n\n  var divisor_for_minutes = secs % (60 * 60);\n  var minutes = Math.floor(divisor_for_minutes / 60);\n\n  var divisor_for_seconds = divisor_for_minutes % 60;\n  var seconds = Math.ceil(divisor_for_seconds);\n\n  var obj = {\n    hours,\n    minutes,\n    seconds,\n  };\n  return obj;\n}\n","import React, { useState, useRef } from \"react\";\nimport { Grid, TextField, Box } from \"@mui/material\";\nimport { alpha } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport Fab from \"@mui/material/Fab\";\nimport Fade from \"@mui/material/Fade\";\nimport { useTheme } from \"@emotion/react\";\n\nconst useStyles = makeStyles((theme) => ({\n  operation: { paddingBottom: \"15px\", display: \"flex\", alignItems: \"baseline\" },\n  answerBox: {\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    borderRadius: theme.shape.borderRadius,\n    transition: \"2s\",\n    padding: \"5px\",\n  },\n  rightAnswer: {\n    backgroundColor: alpha(theme.palette.success.main, 0.3),\n  },\n  wrongAnswer: {\n    backgroundColor: alpha(theme.palette.error.main, 0.3),\n  },\n  textFieldBox: {\n    width: \"90px\",\n    flex: \"0 0 auto\",\n  },\n  answerFabContainer: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n  },\n  negativeFab: {\n    position: \"absolute\",\n    right: \"10px\",\n    bottom: \"60px\",\n  },\n}));\n\nexport default function OperationsComponent({\n  operations,\n  operationAnswer,\n  timeLeft,\n  end,\n  params,\n  isMobile,\n  openCompletedDialog,\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [t] = useTranslation();\n  const [focusIndex, setFocusIndex] = useState(0);\n  const operationRefs = useRef([]);\n\n  const handleEnter = (event) => {\n    if (event.key.toLowerCase() === \"enter\") {\n      setFocusIndex(focusIndex + 1);\n      event.preventDefault();\n    }\n  };\n\n  function negativeNumber() {\n    const ref = operationRefs.current[focusIndex];\n    const currentValue = ref.value;\n    ref.value = currentValue ? Number(currentValue * -1) : Number(-1);\n    ref.focus();\n  }\n\n  return (\n    <form>\n      <Grid\n        container\n        justifyContent=\"space-around\"\n        alignItems=\"center\"\n        spacing={2}\n        className={classes.rowPadding}\n      >\n        {operations.map((o, i) => (\n          <Grid\n            item\n            key={\"operation-\" + i}\n            className={classes.operation}>\n            <Box\n              className={\n                !openCompletedDialog && end\n                  ? o.isRightAnswer\n                    ? classes.answerBox + \" \" + classes.rightAnswer\n                    : classes.answerBox + \" \" + classes.wrongAnswer\n                  : classes.answerBox\n              }\n            >\n              <Box>{o.operationText}</Box>\n              <Box>&nbsp;=&nbsp;</Box>\n              <Box className={classes.textFieldBox}>\n                <TextField\n                  id={\"input-\" + i}\n                  label={t(\"params.numberLabel\")}\n                  disabled={timeLeft === 0 || end}\n                  type=\"number\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  inputRef={(input) => {\n                    operationRefs.current[i] = input;\n                    if (input && focusIndex === i) {\n                      input.focus();\n                    }\n                  }}\n                  onKeyPress={(event) => {\n                    handleEnter(event);\n                  }}\n                  onFocus={(event) => {\n                    setFocusIndex(i);\n                    operationAnswer(event.target.value, i);\n                  }}\n                  onChange={(event) => {\n                    operationAnswer(event.target.value, i);\n                  }}\n                />\n              </Box>\n              <Fade\n                in={!openCompletedDialog && end && !o.isRightAnswer}\n                timeout={1000}\n              >\n                <Box className={classes.answerFabContainer}>\n                  <Fab\n                    variant=\"extended\"\n                    sx={{ backgroundColor: theme.palette.success.main }}\n                    size=\"small\"\n                    aria-label=\"answer\"\n                  >\n                    {o.rightAnswer}\n                  </Fab>\n                </Box>\n              </Fade>\n            </Box>\n          </Grid>\n        ))}\n        <Fade\n          in={\n            params.negativeNumbers &&\n            params.negativeButtonMobile &&\n            isMobile &&\n            !(timeLeft === 0 || end)\n          }\n          timeout={1000}\n        >\n          <Box className={classes.negativeFab}>\n            <Fab\n              color=\"secondary\"\n              aria-label=\"negative\"\n              sx={{ fontSize: \"48px\", fontWeight: \"bold\" }}\n              onClick={() => negativeNumber()}\n            >\n              -\n            </Fab>\n          </Box>\n        </Fade>\n      </Grid>\n    </form>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport Collapse from \"@mui/material/Collapse\";\nimport CountdownComponent from \"./CountdownComponent\";\nimport CompletedDialogComponent from \"./CompletedDialogComponent\";\nimport OperationsComponent from \"./OperationsComponent\";\nimport { Box, Fade } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: (isMobile) => ({ fontSize: isMobile ? \"32px\" : \"56px\" }),\n  start: (isMobile) => ({\n    fontSize: isMobile ? \"42px\" : \"64px\",\n    transform: \"rotate(-5deg)\",\n    paddingTop: \"20px\",\n  }),\n}));\n\nexport default function MathComponent({\n  isMobile,\n  params,\n  operations,\n  operationAnswer,\n  countdonwnStart,\n  countdownEnded,\n  setCountdownEnded,\n  start,\n  end,\n  timeLimit,\n  timeLeft,\n  openCompletedDialog,\n  setOpenCompletedDialog,\n  correctedOperations,\n}) {\n  const classes = useStyles(isMobile);\n  const [t] = useTranslation();\n\n  return (\n    <Fragment>\n      <CountdownComponent\n        countdonwnStart={countdonwnStart}\n        setCountdownEnded={setCountdownEnded}\n      />\n      <Fade\n        in={!start && !countdonwnStart}\n        timeout={isMobile ? 1500 : 700}\n        unmountOnExit={true}\n      >\n        <Box>\n          <span className={classes.text}>{t(\"math.text1\")}</span>\n          <br />\n          <Box className={`${classes.text} ${classes.start}`}>\n            {t(\"math.start\")}\n          </Box>\n          <br />\n          <span className={classes.text}>{t(\"math.text2\")}</span>\n        </Box>\n      </Fade>\n      <Collapse\n        in={start && countdownEnded}\n        timeout={isMobile ? 1500 : 700}>\n        <OperationsComponent\n          operations={operations}\n          operationAnswer={operationAnswer}\n          timeLeft={timeLeft}\n          end={end}\n          params={params}\n          isMobile={isMobile}\n          openCompletedDialog={openCompletedDialog}\n        />\n      </Collapse>\n      <CompletedDialogComponent\n        openCompletedDialog={openCompletedDialog}\n        setOpenCompletedDialog={setOpenCompletedDialog}\n        operations={correctedOperations}\n        totalTime={timeLimit - timeLeft}\n        isTime={params.isTime}\n      />\n    </Fragment>\n  );\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { getOperations, getCorrectAnswers } from \"./services/MathService\";\nimport { hoursToSeconds, minutesToSeconds } from \"date-fns\";\nimport DashboardComponent from \"./DashboardComponent\";\nimport BaseComponent, { dashboard } from \"./BaseComponent\";\nimport MathComponent from \"./MathComponent\";\n\nexport default function MathWrapperComponent({ isMobile, isMdPlus, params }) {\n  const [operations] = useState(() => getOperations(params));\n  const [correctedOperations, setCorrectedOperations] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [start, setStart] = useState(false);\n  const [countdonwnStart, setCountdownStart] = useState(false);\n  const [countdownEnded, setCountdownEnded] = useState(false);\n  const timeLimit = getSeconds(params.time);\n  const [timeLeft, setTimeLeft] = useState(timeLimit);\n  const [openCompletedDialog, setOpenCompletedDialog] = useState(false);\n  const [end, setEnd] = useState(false);\n  const progressMultiplier = 100 / operations.length;\n\n  function operationAnswer(value, index) {\n    operations[index].answer = value;\n    setNewProgress();\n  }\n\n  function setNewProgress() {\n    const currentProgress = operations.filter((o) => o.answer).length;\n    setProgress(currentProgress * progressMultiplier);\n  }\n\n  useEffect(() => {\n    if (countdownEnded) {\n      setStart(true);\n    }\n  }, [countdownEnded]);\n\n  useEffect(() => {\n    if (end) {\n      setCorrectedOperations(getCorrectAnswers(operations));\n    }\n  }, [end, operations]);\n\n  return (\n    <Fragment>\n      <BaseComponent\n        componentType={dashboard}\n        pxHeight={`${isMobile ? 140 : 190}px`}\n        component={\n          <DashboardComponent\n            params={params}\n            operations={operations}\n            start={start}\n            countdonwnStart={countdonwnStart}\n            setCountdownStart={setCountdownStart}\n            countdownEnded={countdownEnded}\n            timeLimit={timeLimit}\n            timeLeft={timeLeft}\n            setTimeLeft={setTimeLeft}\n            setOpenCompletedDialog={setOpenCompletedDialog}\n            end={end}\n            setEnd={setEnd}\n            progress={progress}\n            isMobile={isMobile}\n            isMdPlus={isMdPlus}\n          />\n        }\n      />\n      <BaseComponent\n        pxHeight={`calc(100vh - ${isMobile ? 240 : 330}px)`}\n        component={\n          <MathComponent\n            isMobile={isMobile}\n            params={params}\n            operations={operations}\n            operationAnswer={operationAnswer}\n            countdonwnStart={countdonwnStart}\n            countdownEnded={countdownEnded}\n            setCountdownEnded={setCountdownEnded}\n            start={start}\n            end={end}\n            timeLimit={timeLimit}\n            timeLeft={timeLeft}\n            openCompletedDialog={openCompletedDialog}\n            setOpenCompletedDialog={setOpenCompletedDialog}\n            correctedOperations={correctedOperations}\n          />\n        }\n      />\n    </Fragment>\n  );\n}\n\nfunction getSeconds(dateString) {\n  const date = new Date(dateString);\n  const dateHours = date.getHours();\n  const dateMinutes = date.getMinutes();\n  const dateSeconds = date.getSeconds();\n\n  const result =\n    hoursToSeconds(dateHours) + minutesToSeconds(dateMinutes) + dateSeconds;\n\n  return result;\n}\n"],"names":["chalkboard","dashboard","useStyles","makeStyles","theme","baseContainer","isMobile","pxHeight","padding","marginTop","height","chalkboardContainer","background","palette","backgroundAttachment","color","border","borderColor","borderRadius","shape","borderImage","process","borderImageOutset","overflow","boxShadow","transition","dashboardContainer","BaseComponent","isForm","component","componentType","classes","appliedTheme","createTheme","getTheme","FormWrapper","useCallback","props","formWrapper","children","className","container","justifyContent","alignItems","item","xs","sm","generateOperation","params","operators","isTables","operation","tables","tablesSelection","filter","t","value","label","tablesMaximum","tableOperand","getRandomInt","length","operand","getOperand","negativeNumbers","operator","getRandomOperator","evaluate","tablesOperation","i","operands","maximum","validatedOperation","isNaN","Infinity","validateOperation","mathOperation","max","toString","Number","min","Math","ceil","floor","random","getWrittenOperation","replaceAll","timerSize","timerSizeMobile","root","isMdPlus","position","width","rootCircle","fill","stroke","rootPathElapsed","strokeWidth","primary","main","rootLabel","top","display","fontSize","rootPathRemaining","strokeLinecap","transform","transformOrigin","green","success","orange","red","error","rootSvg","TimerComponent","start","end","timeLimit","timeLeft","setTimeLeft","warningThreshold","alertThreshold","colorCodes","useMemo","info","warning","threshold","alert","useState","remainingPathColor","setRemainingPathColorState","strokeDashArray","setStrokeDashArray","timerRunning","useRef","timerInterval","timePassed","calculateTimeFraction","rawTimeFraction","setCircleDasharray","circleDasharray","toFixed","setRemainingPathColor","startTimer","current","setInterval","useEffect","clearInterval","viewBox","xmlns","cx","cy","r","id","strokeDasharray","d","time","minutes","seconds","formatTime","zIndex","flexCenter","rowPadding","paddingTop","stickyPadding","paddingBottom","progressIndicator","DashboardComponent","operations","countdonwnStart","setCountdownStart","countdownEnded","setOpenCompletedDialog","setEnd","progress","useTranslation","Box","Grid","md","order","isTime","o","answer","LinearProgress","variant","Fragment","Button","Link","to","Typography","onClick","left","CountdownComponent","setCountdownEnded","countdown","setCountdown","Grow","in","timeout","onEnter","setTimeout","onExited","unmountOnExit","Transition","React","ref","Slide","direction","textAlign","rightAnswers","totalOperations","CompletedDialogComponent","openCompletedDialog","totalTime","i18n","handleClose","Dialog","open","TransitionComponent","keepMounted","onClose","DialogContent","sx","isRightAnswer","isSingular","language","rightAnswersText","timeObj","secs","hours","divisor_for_minutes","divisor_for_seconds","secondsToTime","remainingTimeText","rightAnswersPourcentage","completedText","DialogActions","answerBox","rightAnswer","backgroundColor","alpha","wrongAnswer","textFieldBox","flex","answerFabContainer","right","negativeFab","bottom","OperationsComponent","operationAnswer","useTheme","focusIndex","setFocusIndex","operationRefs","spacing","map","operationText","TextField","disabled","type","inputRef","input","focus","onKeyPress","event","key","toLowerCase","preventDefault","handleEnter","onFocus","target","onChange","Fade","Fab","size","negativeButtonMobile","fontWeight","currentValue","negativeNumber","text","MathComponent","correctedOperations","Collapse","MathWrapperComponent","addition","push","substraction","multiplication","tablesMultiplication","division","tablesDivision","getOperators","amount","getOperations","setCorrectedOperations","setProgress","setStart","dateString","date","Date","dateHours","getHours","dateMinutes","getMinutes","dateSeconds","getSeconds","hoursToSeconds","minutesToSeconds","progressMultiplier","getCorrectAnswers","index","currentProgress","setNewProgress"],"sourceRoot":""}