{"version":3,"file":"static/js/733.dc04fd5e.chunk.js","mappings":"iTAMaA,EAAa,aACbC,EAAY,YAEnBC,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCC,cAAe,SAACC,GAAD,YAAY,CACzBC,QAAS,2BACTC,UAAW,KACXC,aAAc,KACdC,OAAM,UAAEJ,EAAMK,UAAR,QAAc,SAEtBC,oBAAqB,CACnBC,WAAYT,EAAMU,QAAQd,WAAWa,WACrCE,qBAAsB,QACtBC,MAAO,QACPC,OAAQ,QACRC,YAAa,QACbC,aAAcf,EAAMgB,MAAMD,aAC1BE,YAAY,OAAD,OAASC,eAAT,yBACXC,kBAAmB,MACnBC,SAAU,OACVC,UAAW,+BACXC,WAAY,OACZ,UAAW,CACTD,UAAW,iCAEb,+CAAgD,CAC9CZ,WAAYT,EAAMU,QAAQd,WAAWa,aAGzCc,mBAAoB,CAAEnB,UAAW,oBAGpB,SAASoB,EAActB,GACpC,IAAMuB,EAAU3B,EAAUI,GACpBwB,EAASxB,EAAMwB,OACfC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAS,SAEpCC,GAAcC,EAAAA,EAAAA,cAClB,SAAC7B,GACC,OAAOwB,EAASxB,EAAM8B,YAAY9B,EAAM+B,UAAY/B,EAAM+B,WAE5D,CAACP,IAGH,OACE,SAAC,IAAD,CAAe1B,MAAO2B,EAAtB,UACE,SAAC,IAAD,CAAWO,UAAU,YAArB,UACE,UAAC,KAAD,CACEC,WAAS,EACTC,eAAe,SACfC,WAAW,SAHb,WAKE,SAAC,KAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,KAEN,SAAC,KAAD,CACEF,MAAI,EACJE,GAAI,EAFN,UAGE,SAACV,EAAD,CAAaE,YAAa,SAACC,GAAD,OAAc,0BAAOA,KAA/C,UACE,SAAC,KAAD,CACEE,WAAS,EACTC,eAAe,SACfC,WAAW,SACXH,UAAS,UAAKT,EAAQxB,cAAb,YACPC,EAAMuC,gBAAkB5C,EACpB4B,EAAQF,mBACRE,EAAQjB,qBAPhB,SAUGN,EAAMwC,iBAKb,SAAC,KAAD,CACEJ,MAAI,EACJC,GAAI,EACJC,GAAI,a,2HCnFT,SAASG,EAAcC,GAC5B,IAAMC,EAsFR,SAAsBD,GACpB,IAAIC,EAAY,GACZD,EAAOE,UACTD,EAAUE,KAAK,KAEbH,EAAOI,cACTH,EAAUE,KAAK,KAEbH,EAAOK,gBACTJ,EAAUE,KAAK,KAEbH,EAAOM,UACTL,EAAUE,KAAK,KAEjB,OAAOF,EApGWM,CAAaP,GAE/B,OAkBF,SAA4BA,EAAQC,GAElC,IADA,IAAIO,EAAa,GACRC,EAAI,EAAGA,EAAIT,EAAOU,OAAQD,IAAK,CACtC,IAAME,EAAYC,EAAkBZ,EAAQC,GAC5CO,EAAWL,KAAK,CACdU,GAAIJ,EAAI,EACRE,UAAAA,EACAG,cAAeC,EAAoBJ,KAGvC,OAAOH,EA5BAQ,CAAmBhB,EAAQC,GA+BpC,SAASW,EAAkBZ,EAAQC,GAGjC,IAFA,IAAIU,EAAY,GAEPF,EAAI,EAAGA,EAAIT,EAAOiB,SAAUR,IAAK,CAGxCE,GAFiBO,EAAWlB,GAIxBS,EAAIT,EAAOiB,SAAW,IACxBN,GAAwBQ,EAAkBlB,IAM9C,OAFAU,EAKF,SAA2BX,EAAQC,EAAWU,GAC5C,IAAIS,EAAqBT,GAErBU,OAAMC,EAAAA,EAAAA,IAASX,MAAeW,EAAAA,EAAAA,IAASX,KAAeY,EAAAA,KACxDH,EAAqBR,EAAkBZ,EAAQC,KAE7CqB,EAAAA,EAAAA,IAASX,GAAa,IAAM,IAC9BS,EAAqBR,EAAkBZ,EAAQC,KAE5CD,EAAOwB,kBAAmBF,EAAAA,EAAAA,IAASX,GAAa,IACnDS,EAAqBR,EAAkBZ,EAAQC,IAGjD,OAAOmB,EAlBKK,CAAkBzB,EAAQC,EAAWU,GAE1CA,EAmBT,SAASO,EAAWlB,GAClB,IAAI0B,EASJ,OARI1B,EAAOwB,iBACTE,EAAUC,EAAa,EAAG3B,EAAO4B,SAASC,WACf,IAAvBF,EAAa,EAAG,KAClBD,EAAU,KAAOA,EAAU,MAEnB1B,EAAOwB,kBACjBE,EAAUC,EAAa,EAAG3B,EAAO4B,SAASC,YAErCH,EAGT,SAASP,EAAkBlB,GAGzB,OAAOA,EAFa0B,EAAa,EAAGG,OAAO7B,EAAU8B,QAAU,IAsBjE,SAASJ,EAAaK,EAAKC,GAGzB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,GAAKA,GAGtD,SAASjB,EAAoBJ,GAO3B,OAFAA,GADAA,GADAA,GADAA,GADAA,EAAYA,EAAU2B,WAAW,IAAK,QAChBA,WAAW,IAAK,QAChBA,WAAW,OAAQ,OACnBA,WAAW,IAAK,QAChBA,WAAW,IAAK,U,kFC5GlCC,EAAY,QACZC,EAAkB,OAGlBtF,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCqF,KAAM,SAACnF,GAAD,MAAY,CAChBoF,SAAU,WACVhF,OAAQJ,EAAMqF,SAAWH,EAAkBD,EAC3CK,MAAOtF,EAAMqF,SAAWH,EAAkBD,IAE5CM,WAAY,CACVC,KAAM,OACNC,OAAQ,QAEVC,gBAAiB,CACfC,YAbgB,MAchBF,OAAQ3F,EAAMU,QAAQoF,QAAQC,MAEhCC,UAAW,SAAC9F,GAAD,MAAY,CACrBoF,SAAU,WACVhF,OAAQJ,EAAMqF,SAAWH,EAAkBD,EAC3CK,MAAOtF,EAAMqF,SAAWH,EAAkBD,EAC1Cc,IAAK,EACLC,QAAS,OACT7D,WAAY,SACZD,eAAgB,SAChB+D,SAAU,SAEZC,kBAAmB,CACjBP,YA3BgB,MA4BhBQ,cAAe,QACfC,UAAW,gBACXC,gBAAiB,SACjBjF,WAAY,gBACZqE,OAAQ,gBAEVa,MAAO,CACL5F,MAAOZ,EAAMU,QAAQ+F,QAAQV,MAE/BW,OAAQ,CAAE9F,MAAO,UACjB+F,IAAK,CAAE/F,MAAOZ,EAAMU,QAAQkG,MAAMb,MAClCc,QAAS,CACPP,UAAW,kBAIA,SAASQ,EAAe5G,GACrC,IAAMuB,EAAU3B,EAAUI,GAGpB6G,EAAmBjC,KAAKE,MAAM9E,EAAM8G,UAAY,GAChDC,EAAiBnC,KAAKE,MAAM9E,EAAM8G,UAAY,GAE9CE,GAAaC,EAAAA,EAAAA,UAAQ,WACzB,MAAO,CACLC,KAAM,CACJxG,MAAO,SAETyG,QAAS,CACPzG,MAAO,SACP0G,UAAWP,GAEbQ,MAAO,CACL3G,MAAO,MACP0G,UAAWL,MAGd,CAACF,EAAkBE,IAEtB,GAAyDO,EAAAA,EAAAA,UACvDN,EAAWE,KAAKxG,OADlB,eAAO6G,EAAP,KAA2BC,EAA3B,KAGA,GAA8CF,EAAAA,EAAAA,UAAS,KAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KAGIC,GAAeC,EAAAA,EAAAA,SAAO,GAEtBC,GAAgBD,EAAAA,EAAAA,QAAO,MACvBE,GAAaF,EAAAA,EAAAA,QAAO,GAGlBG,GAAwBlG,EAAAA,EAAAA,cAAY,WACxC,IAAMmG,EAAkBhI,EAAMiI,SAAWjI,EAAM8G,UAC/C,OAAOkB,EAAmB,EAAIhI,EAAM8G,WAAc,EAAIkB,KACrD,CAAChI,EAAMiI,SAAUjI,EAAM8G,YAGpBoB,GAAqBrG,EAAAA,EAAAA,cAAY,WACrC,IAAMsG,EAAe,WAvCD,IAwClBJ,KACAK,QAAQ,GAFW,QAIrBV,EAAmBS,KAClB,CAACJ,IAEEM,GAAwBxG,EAAAA,EAAAA,cAAY,WACxC,IAAQwF,EAAmBL,EAAnBK,MAAOF,EAAYH,EAAZG,QAEXnH,EAAMiI,UAAYZ,EAAMD,UAC1BI,EAA2BH,EAAM3G,OACxBV,EAAMiI,UAAYd,EAAQC,WACnCI,EAA2BL,EAAQzG,SAEpC,CAACV,EAAMiI,SAAUjB,IAEdsB,GAAazG,EAAAA,EAAAA,cAAY,WAC7B8F,EAAaY,SAAU,EAEvBV,EAAcU,QAAUC,aAAY,WAElCV,EAAWS,UACXvI,EAAMyI,YAAYzI,EAAMiI,SAAWH,EAAWS,WAC7C,OACF,CAACvI,IAuCJ,OArCA0I,EAAAA,EAAAA,YAAU,WACRR,IACAG,EAAsBrI,EAAMiI,WAEJ,IAAnBjI,EAAMiI,UAAkBN,EAAaY,SAAYvI,EAAM2I,OAC1DC,cAAcf,EAAcU,SAC5BZ,EAAaY,SAAU,KAExB,CAACvI,EAAMiI,SAAUjI,EAAM2I,IAAKT,EAAoBG,KAEnDK,EAAAA,EAAAA,YAAU,WAEN1I,EAAM6I,QACLlB,EAAaY,SACdvI,EAAMiI,SAAW,IAChBjI,EAAM2I,KAEPL,MAED,CAACtI,EAAM6I,MAAO7I,EAAMiI,SAAUjI,EAAM2I,IAAKL,KAmB1C,iBAAKtG,UAAWT,EAAQ4D,KAAxB,UACInF,EAAMqF,SA0BJ,MAzBF,gBACErD,UAAWT,EAAQoF,QACnBmC,QAAQ,cACRC,MAAM,6BAHR,UAKE,eAAG/G,UAAWT,EAAQgE,WAAtB,WACE,mBACEvD,UAAWT,EAAQmE,gBACnBsD,GAAG,KACHC,GAAG,KACHC,EAAE,QAEJ,iBACE3F,GAAG,4BACH4F,gBAAiB1B,EACjBzF,UAAS,UAAKT,EAAQ2E,kBAAb,YAAkC3E,EAAQgG,IACnD6B,EAAE,qEAUV,iBACE7F,GAAG,mBACHvB,UAAWT,EAAQuE,UAFrB,SA7CJ,SAAoBuD,GAElB,IAAMC,EAAU1E,KAAKE,MAAMuE,EAAO,IAG9BE,EAAUF,EAAO,GAQrB,OALIE,EAAU,KACZA,EAAO,WAAOA,IAIV,GAAN,OAAUD,EAAV,YAAqBC,GAmChBC,CAAWxJ,EAAMiI,e,kCCzLpBrI,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCqF,KAAM,CACJC,SAAU,SACVW,IAAK,MACL9F,QAAS,KAETwJ,OAAQ,EACRnE,MAAO,QAEToE,WAAY,CAAE1D,QAAS,OAAQ9D,eAAgB,UAC/CyH,WAAY,CAAEC,WAAY,MAC1BC,cAAe,CAAEC,cAAe,MAChCC,kBAAmB,CAAE9D,SAAU,YAGlB,SAAS+D,EAAmBhK,GACzC,IAAMuB,EAAU3B,IAChB,GAAYqK,EAAAA,EAAAA,KAALC,GAAP,eAEA,OACE,SAACC,EAAA,EAAD,CAAKnI,UAAWT,EAAQ4D,KAAxB,UACE,UAACiF,EAAA,GAAD,CACEnI,WAAS,EACTC,eAAe,eACfC,WAAW,SAHb,WAIE,UAACiI,EAAA,GAAD,CACE/H,GAAI,GACJgI,GAAI,EACJjI,MAAI,EACJkI,MAAO,CAAEjI,GAAI,EAAGC,GAAI,GACpBN,UAAWT,EAAQsI,cALrB,UAOI7J,EAAMqF,UAAarF,EAAM0C,OAAO6H,OAK9B,MAJF,kBAAMvI,UAAWT,EAAQwI,kBAAzB,UACG/J,EAAMkD,WAAWsH,QAAO,SAACC,GAAD,OAAOA,EAAEC,UAAQjG,OAD5C,IAEGzE,EAAMkD,WAAWuB,WAGtB,SAACkG,EAAA,EAAD,CACEjK,MAAM,UACNkK,QAAQ,cACRC,MAAO7K,EAAM8K,cAGhB9K,EAAM0C,OAAO6H,QACZ,SAACH,EAAA,GAAD,CACEhI,MAAI,EACJC,GAAI,GACJgI,GAAI,EACJC,MAAO,CAAEjI,GAAI,EAAGC,GAAI,GACpBN,UAAWT,EAAQmI,WAAa,IAAMnI,EAAQsI,cALhD,UAOE,SAACjD,EAAD,CACEiC,MAAO7I,EAAM6I,MACbF,IAAK3I,EAAM2I,IACX7B,UAAW9G,EAAM8G,UACjBmB,SAAUjI,EAAMiI,SAChBQ,YAAazI,EAAMyI,YACnBpD,SAAUrF,EAAMqF,aAGlB,MACJ,SAAC+E,EAAA,GAAD,CACEhI,MAAI,EACJC,GAAI,GACJgI,GAAI,EACJC,MAAO,CAAEjI,GAAI,EAAGC,GAAI,GACpBN,WACGhC,EAAMqF,SAAW9D,EAAQoI,WAAa,IACvC,IACApI,EAAQsI,cARZ,SAWG7J,EAAM2I,KACL,SAAC,EAAAoC,SAAD,WACE,SAACC,EAAA,EAAD,CACEJ,QAAQ,YACRpI,UAAWyI,EAAAA,GACXC,GAAI,UACJxK,MAAM,UAJR,UAME,SAACyK,EAAA,EAAD,UAAajB,EAAE,mBAGjBlK,EAAM6I,OAAS7I,EAAMoL,iBAAmBpL,EAAM2I,KAChD,SAACqC,EAAA,EAAD,CACEJ,QAAQ,YACRlK,MAAM,QACN2K,QAAS,WACPrL,EAAMsL,QAAO,GACbtL,EAAMuL,wBAAuB,IALjC,UAQE,SAACJ,EAAA,EAAD,CAAYzK,MAAM,QAAlB,SAA2BwJ,EAAE,kBAG/B,SAACc,EAAA,EAAD,CACEJ,QAAQ,YACRlK,MAAM,UACN2K,QAAS,WACFrL,EAAMwL,iBACTxL,EAAMyL,mBAAkB,IAL9B,UASE,SAACN,EAAA,EAAD,UAAajB,EAAE,yB,kCC7GvBtK,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCqF,KAAM,CACJC,SAAU,WACVW,IAAK,MACL2F,KAAM,MACNtF,UAAW,wBACXqD,OAAQ,EACRxD,SAAU,SAIC,SAAS0F,EAAmB3L,GACzC,IAAMuB,EAAU3B,IAChB,GAAkC0H,EAAAA,EAAAA,YAAlC,eAAOsE,EAAP,KAAkBC,EAAlB,KAQA,OANAnD,EAAAA,EAAAA,YAAU,WACJ1I,EAAMwL,iBACRK,EAAa,KAEd,CAAC7L,EAAMwL,mBAGR,iBAAKxJ,UAAWT,EAAQ4D,KAAxB,WACE,SAAC2G,EAAA,EAAD,CACEC,GAAkB,IAAdH,EACJI,QAAS,IACTC,QAAS,WACPC,YAAW,WACTL,EAAa,QACZ,MAELM,SAAU,kBAAMN,EAAa,IAC7BO,eAAa,EATf,UAWE,kCAEF,SAACN,EAAA,EAAD,CACEC,GAAkB,IAAdH,EACJI,QAAS,IACTC,QAAS,WACPC,YAAW,WACTL,EAAa,QACZ,MAELM,SAAU,kBAAMN,EAAa,IAC7BO,eAAa,EATf,UAWE,kCAEF,SAACN,EAAA,EAAD,CACEC,GAAkB,IAAdH,EACJI,QAAS,IACTC,QAAS,WACPC,YAAW,WACTL,EAAa,QACZ,MAELM,SAAU,kBAAMN,EAAa,IAC7BO,eAAa,EATf,UAWE,kCAEF,SAACN,EAAA,EAAD,CACEC,GAAkB,IAAdH,EACJI,QAAS,IACTC,QAAS,WACPC,YAAW,WACTL,EAAa,QACZ,MAELM,SAAU,kBAAMnM,EAAMqM,mBAAkB,IACxCD,eAAa,EATf,UAWE,sC,qDCjEFE,EAAaC,EAAAA,YAAiB,SAAoBvM,EAAOwM,GAC7D,OAAO,SAACC,EAAA,GAAD,QACLC,UAAU,KACVF,IAAKA,GACDxM,OAGFJ,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCqF,KAAM,CAAEwH,UAAW,UACnBC,aAAc,CACZ3G,SAAU,OACVvF,MAAOZ,EAAMU,QAAQ+F,QAAQV,MAE/BgH,gBAAiB,CACf5G,SAAU,OACVvF,MAAOZ,EAAMU,QAAQoF,QAAQC,UAIlB,SAASiH,EAAyB9M,GAC/C,IAAMuB,EAAU3B,IACRmN,GAAS9C,EAAAA,EAAAA,KAAT8C,KACR,GAAY9C,EAAAA,EAAAA,KAALC,GAAP,eAEM8C,EAAc,WAClBhN,EAAMuL,wBAAuB,IA+D/B,OACE,0BACE,UAAC0B,EAAA,EAAD,CACEC,KAAMlN,EAAMmN,oBACZC,oBAAqBd,EACrBe,aAAW,EACXC,QAASN,EACT,mBAAiB,mBALnB,WAOE,UAACO,EAAA,EAAD,CAAevL,UAAWT,EAAQ4D,KAAlC,WACE,SAACgG,EAAA,EAAD,CACEzK,MAAM,UACN8M,GAAI,CAAEvH,SAAU,QAFlB,SAGGiE,EAAE,sBAEL,uBAAIA,EAAE,uBACN,yBACGA,EAAE,yBADL,IA5EiB,WACvB,IAAM0C,EAAe5M,EAAMkD,WAAWsH,QAAO,SAACC,GAAD,OAAOA,EAAEgD,iBAAehJ,OAC/DiJ,EACkB,OAAlBX,EAAKY,SACAf,GAAgB,EAEC,IAAjBA,EAIX,OACE,UAAC,EAAA7B,SAAD,YACE,kBAAM/I,UAAWT,EAAQqL,aAAzB,UAAwCA,EAAxC,OAEI1C,EADHwD,EACK,gCACA,kCA8D4BE,GAAoB,IACjD1D,EAAE,yBAA0B,KAC7B,iBAAMlI,UAAWT,EAAQsL,gBAAzB,SACG7M,EAAMkD,WAAWuB,SAEnBzE,EAAMuK,OAAS,KAAO,OAExBvK,EAAMuK,QACL,yBACGL,EAAE,yBAA0B,KAC7B,iBAAMlI,UAAWT,EAAQqL,aAAzB,SAnEc,WACxB,IAAMiB,EA2FV,SAAuBC,GACrB,IAAIC,EAAQnJ,KAAKE,MAAMgJ,EAAI,MAEvBE,EAAsBF,EAAI,KAC1BxE,EAAU1E,KAAKE,MAAMkJ,EAAsB,IAE3CC,EAAsBD,EAAsB,GAC5CzE,EAAU3E,KAAKC,KAAKoJ,GAOxB,MALU,CACRF,MAAAA,EACAzE,QAAAA,EACAC,QAAAA,GAvGgB2E,CAAclO,EAAMmO,WAkBpC,OAfEN,EAAQE,MAAQ,EAAhB,UACOF,EAAQE,MADf,YAEIF,EAAQE,MAAQ,EAAI7D,EAAE,mBAAqBA,EAAE,kBAFjD,KAII,KAEJ2D,EAAQvE,QAAU,EAAlB,UACOuE,EAAQvE,QADf,YAEIuE,EAAQvE,QAAU,EAAIY,EAAE,qBAAuBA,EAAE,oBAFrD,KAII,IACO,UAAM2D,EAAQtE,QAAd,YACXsE,EAAQtE,QAAU,EAAIW,EAAE,qBAAuBA,EAAE,qBAoDtCkE,KAHL,OAOE,MACJ,SAACjD,EAAA,EAAD,CACEzK,MAAM,UACN8M,GAAI,CAAEvH,SAAU,QAFlB,SAnDc,WACpB,IAEMoI,EAFerO,EAAMkD,WAAWsH,QAAO,SAACC,GAAD,OAAOA,EAAEgD,iBAAehJ,QAC7C,IAAMzE,EAAMkD,WAAWuB,QAG/C,OAAgC,MAA5B4J,EACKnE,EAAE,mBACAmE,GAA2B,GAC7BnE,EAAE,mBACAmE,GAA2B,GAC7BnE,EAAE,mBACAmE,GAA2B,GAC7BnE,EAAE,mBACAmE,EAA0B,GAC5BnE,EAAE,wBADJ,EAyCEoE,SAGL,SAACC,EAAA,EAAD,WACE,SAACvD,EAAA,EAAD,CACEJ,QAAQ,WACRlK,MAAM,UACN2K,QAAS2B,EAHX,UAIE,SAAC7B,EAAA,EAAD,0B,qDCvINvL,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCuD,UAAW,CAAEyG,cAAe,OAAQ9D,QAAS,OAAQ7D,WAAY,YACjEqM,UAAW,CACTpJ,SAAU,WACVY,QAAS,OACT7D,WAAY,SACZtB,aAAcf,EAAMgB,MAAMD,aAC1BO,WAAY,KACZnB,QAAS,OAEXwO,YAAa,CACXC,iBAAiBC,EAAAA,EAAAA,IAAM7O,EAAMU,QAAQ+F,QAAQV,KAAM,KAErD+I,YAAa,CACXF,iBAAiBC,EAAAA,EAAAA,IAAM7O,EAAMU,QAAQkG,MAAMb,KAAM,KAEnDgJ,aAAc,CACZvJ,MAAO,OACPwJ,KAAM,YAERC,mBAAoB,CAClB3J,SAAU,WACVW,IAAK,EACLiJ,MAAO,GAETC,YAAa,CACX7J,SAAU,WACV4J,MAAO,OACPE,OAAQ,YAIG,SAASC,EAAoBnP,GAC1C,IAAMuB,EAAU3B,IACVE,GAAQsP,EAAAA,EAAAA,KACd,GAAYnF,EAAAA,EAAAA,KAALC,GAAP,eACA,GAAoC5C,EAAAA,EAAAA,UAAS,GAA7C,eAAO+H,EAAP,KAAmBC,EAAnB,KACMC,GAAgB3H,EAAAA,EAAAA,QAAO,IAgB7B,OACE,2BACE,UAACwC,EAAA,GAAD,CACEnI,WAAS,EACTC,eAAe,eACfC,WAAW,SACXqN,QAAS,EACTxN,UAAWT,EAAQoI,WALrB,UAOG3J,EAAMkD,WAAWuM,KAAI,SAAChF,EAAGtH,GAAJ,OACpB,SAACiH,EAAA,GAAD,CACEhI,MAAI,EAEJJ,UAAWT,EAAQ8B,UAHrB,UAIE,UAAC8G,EAAA,EAAD,CACEnI,WACGhC,EAAMmN,qBAAuBnN,EAAM2I,IAChC8B,EAAEgD,cACAlM,EAAQiN,UAAY,IAAMjN,EAAQkN,YAClClN,EAAQiN,UAAY,IAAMjN,EAAQqN,YACpCrN,EAAQiN,UANhB,WASE,SAACrE,EAAA,EAAD,UAAMM,EAAEjH,iBACR,SAAC2G,EAAA,EAAD,yBACA,SAACA,EAAA,EAAD,CAAKnI,UAAWT,EAAQsN,aAAxB,UACE,SAACa,EAAA,EAAD,CACEnM,GAAI,SAAWJ,EACfwM,MAAOzF,EAAE,sBACT0F,SAA6B,IAAnB5P,EAAMiI,UAAkBjI,EAAM2I,IACxCkH,KAAK,SACLjF,QAAQ,WACRlK,MAAM,UACNoP,SAAU,SAACC,GACTR,EAAchH,QAAQpF,GAAK4M,EACvBA,GAASV,IAAelM,GAC1B4M,EAAMC,SAGVC,WAAY,SAACC,IArDT,SAACA,GACa,UAA5BA,EAAMC,IAAIC,gBACZd,EAAcD,EAAa,GAC3Ba,EAAMG,kBAmDQC,CAAYJ,IAEdK,QAAS,SAACL,GACRZ,EAAcnM,GACdnD,EAAMwQ,gBAAgBN,EAAMO,OAAO5F,MAAOJ,EAAElH,KAE9CmN,SAAU,SAACR,GACTlQ,EAAMwQ,gBAAgBN,EAAMO,OAAO5F,MAAOJ,EAAElH,UAIlD,SAACoN,EAAA,EAAD,CACE5E,IAAK/L,EAAMmN,qBAAuBnN,EAAM2I,MAAQ8B,EAAEgD,cAClDzB,QAAS,IAFX,UAIE,SAAC7B,EAAA,EAAD,CAAKnI,UAAWT,EAAQwN,mBAAxB,UACE,SAAC6B,EAAA,EAAD,CACEhG,QAAQ,WACR4C,GAAI,CAAEkB,gBAAiB5O,EAAMU,QAAQ+F,QAAQV,MAC7CgL,KAAK,QACL,aAAW,SAJb,SAMGpG,EAAEgE,sBAlDN,aAAetL,OAyDxB,SAACwN,EAAA,EAAD,CACE5E,GACE/L,EAAM0C,OAAOwB,iBACblE,EAAM0C,OAAOoO,sBACb9Q,EAAMqF,YACe,IAAnBrF,EAAMiI,UAAkBjI,EAAM2I,KAElCqD,QAAS,IAPX,UASE,SAAC7B,EAAA,EAAD,CAAKnI,UAAWT,EAAQ0N,YAAxB,UACE,SAAC2B,EAAA,EAAD,CACElQ,MAAM,YACN,aAAW,WACX8M,GAAI,CAAEvH,SAAU,OAAQ8K,WAAY,QACpC1F,QAAS,kBA1FrB,WACE,IAAMmB,EAAM+C,EAAchH,QAAQ8G,GAC5B2B,EAAexE,EAAI3B,MACzB2B,EAAI3B,MAAuBrG,OAAfwM,GAAsC,EAAhBA,GAA6B,GAC/DxE,EAAIwD,QAsFqBiB,IAJjB,wBCvIG,SAASC,EAAclR,GACpC,OACE,UAAC,EAAA+K,SAAD,YACE,SAACY,EAAD,CACEH,gBAAiBxL,EAAMwL,gBACvBa,kBAAmBrM,EAAMqM,qBAE3B,SAAC8E,EAAA,EAAD,CACEpF,GAAI/L,EAAM6I,OAAS7I,EAAMoL,eACzBY,QAAShM,EAAMqF,SAAW,KAAO,IAFnC,UAIE,SAAC8J,EAAD,CACEjM,WAAYlD,EAAMkD,WAClBsN,gBAAiBxQ,EAAMwQ,gBACvBvI,SAAUjI,EAAMiI,SAChBU,IAAK3I,EAAM2I,IACXjG,OAAQ1C,EAAM0C,OACd2C,SAAUrF,EAAMqF,SAChB8H,oBAAqBnN,EAAMmN,yBAG/B,SAACL,EAAD,CACEK,oBAAqBnN,EAAMmN,oBAC3B5B,uBAAwBvL,EAAMuL,uBAC9BrI,WAAYlD,EAAMoR,oBAClBjD,UAAWnO,EAAM8G,UAAY9G,EAAMiI,SACnCsC,OAAQvK,EAAM0C,OAAO6H,YCzBd,SAAS8G,EAAqBrR,GAC3C,OAAqBsH,EAAAA,EAAAA,WAAS,kBAAM7E,EAAczC,EAAM0C,WAAjDQ,GAAP,eACA,GAAsDoE,EAAAA,EAAAA,UAAS,IAA/D,eAAO8J,EAAP,KAA4BE,EAA5B,KACA,GAAgChK,EAAAA,EAAAA,UAAS,GAAzC,eAAOwD,EAAP,KAAiByG,EAAjB,KACA,GAA0BjK,EAAAA,EAAAA,WAAS,GAAnC,eAAOuB,EAAP,KAAc2I,EAAd,KACA,GAA6ClK,EAAAA,EAAAA,WAAS,GAAtD,eAAOkE,EAAP,KAAwBC,EAAxB,KACA,GAA4CnE,EAAAA,EAAAA,WAAS,GAArD,eAAO8D,EAAP,KAAuBiB,EAAvB,KACMvF,EA6ER,SAAoB2K,GAClB,IAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAYF,EAAKG,WACjBC,EAAcJ,EAAKK,aACnBC,EAAcN,EAAKO,aAKzB,OAFEC,EAAAA,EAAAA,GAAeN,IAAaO,EAAAA,EAAAA,GAAiBL,GAAeE,EApF5CC,CAAWjS,EAAM0C,OAAO2G,MAC1C,GAAgC/B,EAAAA,EAAAA,UAASR,GAAzC,eAAOmB,EAAP,KAAiBQ,EAAjB,KACA,GAAsDnB,EAAAA,EAAAA,WAAS,GAA/D,eAAO6F,EAAP,KAA4B5B,EAA5B,KACA,GAAsBjE,EAAAA,EAAAA,WAAS,GAA/B,eAAOqB,EAAP,KAAY2C,EAAZ,KAyBA,OAZA5C,EAAAA,EAAAA,YAAU,WACJ0C,GACFoG,GAAS,KAEV,CAACpG,KAEJ1C,EAAAA,EAAAA,YAAU,WACJC,GACF2I,EP9BC,SAA2BpO,GAAa,IAAD,YACtBA,GADsB,IAC5C,2BAAkC,CAAC,IAA1BG,EAAyB,QACP,OAArBA,EAAUqH,QAAwC,KAArBrH,EAAUqH,OACzCrH,EAAUoK,eAAgB,GACjBzJ,EAAAA,EAAAA,IAASX,EAAUA,aAAemB,OAAOnB,EAAUqH,QAC5DrH,EAAUoK,eAAgB,EAE1BpK,EAAUoK,eAAgB,EAE5BpK,EAAUoL,aAAczK,EAAAA,EAAAA,IAASX,EAAUA,YATD,8BAY5C,OAAOH,EOkBoBkP,CAAkBlP,MAE1C,CAACyF,EAAKzF,KAGP,UAAC,EAAA6H,SAAD,YACE,SAACzJ,EAAA,QAAD,CACEiB,cAAe5C,EAAAA,UACfU,GAAI,OACJmC,WACE,SAACwH,EAAD,CACEtH,OAAQ1C,EAAM0C,OACdQ,WAAYA,EACZ2F,MAAOA,EACP2C,gBAAiBA,EACjBC,kBAAmBA,EACnBL,eAAgBA,EAChBtE,UAAWA,EACXmB,SAAUA,EACVQ,YAAaA,EACb8C,uBAAwBA,EACxB5C,IAAKA,EACL2C,OAAQA,EACRR,SAAUA,EACVzF,SAAUrF,EAAMqF,cAItB,SAAC/D,EAAA,QAAD,CACEjB,GAAI,OACJmC,WACE,SAAC0O,EAAD,CACE7L,SAAUrF,EAAMqF,SAChB3C,OAAQ1C,EAAM0C,OACdQ,WAAYA,EACZsN,gBAtDV,SAAyB3F,EAAOtH,GAC9BL,EAAWmP,MAAK,SAAC5H,GAAD,OAAOA,EAAElH,KAAOA,KAAImH,OAASG,EAI/C,WACE,IAAMyH,EAAqB,IAAMpP,EAAWuB,OACtC8N,EAAkBrP,EAAWsH,QAAO,SAACC,GAAD,OAAOA,EAAEC,UAAQjG,OAC3D8M,EAAYgB,EAAkBD,GAN9BE,IAqDQhH,gBAAiBA,EACjBJ,eAAgBA,EAChBiB,kBAAmBA,EACnBxD,MAAOA,EACPF,IAAKA,EACL7B,UAAWA,EACXmB,SAAUA,EACVkF,oBAAqBA,EACrB5B,uBAAwBA,EACxB6F,oBAAqBA,W","sources":["components/BaseComponent.jsx","components/services/MathService.jsx","components/TimerComponent.jsx","components/DashboardComponent.jsx","components/CountdownComponent.jsx","components/CompletedDialogComponent.jsx","components/OperationsComponent.jsx","components/MathComponent.jsx","components/MathWrapperComponent.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { Container, Grid } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport getTheme from \"../theme\";\n\nexport const chalkboard = \"chalkboard\";\nexport const dashboard = \"dashboard\";\n\nconst useStyles = makeStyles((theme) => ({\n  baseContainer: (props) => ({\n    padding: \"2% calc(2% - 10px) 2% 2%\",\n    marginTop: \"5%\",\n    marginBottom: \"2%\",\n    height: props.vh ?? \"85vh\",\n  }),\n  chalkboardContainer: {\n    background: theme.palette.chalkboard.background,\n    backgroundAttachment: \"local\",\n    color: \"white\",\n    border: \"solid\",\n    borderColor: \"black\",\n    borderRadius: theme.shape.borderRadius,\n    borderImage: `url(${process.env.PUBLIC_URL}/wood.png) 200 / 12px`,\n    borderImageOutset: \"8px\",\n    overflow: \"auto\",\n    boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.7)\",\n    transition: \"0.5s\",\n    \"&:hover\": {\n      boxShadow: \"0 12px 24px 0 rgba(0,0,0,0.7)\",\n    },\n    \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n      background: theme.palette.chalkboard.background,\n    },\n  },\n  dashboardContainer: { marginTop: \"0 !important\" },\n}));\n\nexport default function BaseComponent(props) {\n  const classes = useStyles(props);\n  const isForm = props.isForm;\n  const appliedTheme = createTheme(getTheme(\"dark\"));\n\n  const FormWrapper = useCallback(\n    (props) => {\n      return isForm ? props.formWrapper(props.children) : props.children;\n    },\n    [isForm]\n  );\n\n  return (\n    <ThemeProvider theme={appliedTheme}>\n      <Container className=\"container\">\n        <Grid\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\">\n          {/* Left margin */}\n          <Grid\n            item\n            xs={0}\n            sm={2}></Grid>\n          {/* Middle content */}\n          <Grid\n            item\n            sm={8}>\n            <FormWrapper formWrapper={(children) => <form>{children}</form>}>\n              <Grid\n                container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className={`${classes.baseContainer} ${\n                  props.componentType === dashboard\n                    ? classes.dashboardContainer\n                    : classes.chalkboardContainer\n                }`}\n              >\n                {props.component}\n              </Grid>\n            </FormWrapper>\n          </Grid>\n          {/* Right Margin */}\n          <Grid\n            item\n            xs={0}\n            sm={2}></Grid>\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import { evaluate } from \"mathjs\";\n\nexport function getOperations(params) {\n  const operators = getOperators(params);\n\n  return generateOperations(params, operators);\n}\n\nexport function getCorrectAnswers(operations) {\n  for (let operation of operations) {\n    if (operation.answer === null || operation.answer === \"\") {\n      operation.isRightAnswer = false;\n    } else if (evaluate(operation.operation) === Number(operation.answer)) {\n      operation.isRightAnswer = true;\n    } else {\n      operation.isRightAnswer = false;\n    }\n    operation.rightAnswer = evaluate(operation.operation);\n  }\n\n  return operations;\n}\n\nfunction generateOperations(params, operators) {\n  let operations = [];\n  for (let i = 0; i < params.amount; i++) {\n    const operation = generateOperation(params, operators);\n    operations.push({\n      id: i + 1,\n      operation,\n      operationText: getWrittenOperation(operation),\n    });\n  }\n  return operations;\n}\n\nfunction generateOperation(params, operators) {\n  let operation = \"\";\n\n  for (let i = 0; i < params.operands; i++) {\n    let newOperand = getOperand(params);\n\n    operation = operation + newOperand;\n\n    if (i < params.operands - 1) {\n      operation = operation + getRandomOperator(operators);\n    }\n  }\n\n  operation = validateOperation(params, operators, operation);\n\n  return operation;\n}\n\nfunction validateOperation(params, operators, operation) {\n  let validatedOperation = operation;\n\n  if (isNaN(evaluate(operation)) || evaluate(operation) === Infinity) {\n    validatedOperation = generateOperation(params, operators);\n  }\n  if (evaluate(operation) % 1 !== 0) {\n    validatedOperation = generateOperation(params, operators);\n  }\n  if (!params.negativeNumbers && evaluate(operation) < 0) {\n    validatedOperation = generateOperation(params, operators);\n  }\n\n  return validatedOperation;\n}\n\nfunction getOperand(params) {\n  let operand;\n  if (params.negativeNumbers) {\n    operand = getRandomInt(1, params.maximum).toString();\n    if (getRandomInt(0, 2) === 1) {\n      operand = \"(-\" + operand + \")\";\n    }\n  } else if (!params.negativeNumbers) {\n    operand = getRandomInt(1, params.maximum).toString();\n  }\n  return operand;\n}\n\nfunction getRandomOperator(operators) {\n  const randomIndex = getRandomInt(0, Number(operators.length) - 1);\n\n  return operators[randomIndex];\n}\n\nfunction getOperators(params) {\n  let operators = [];\n  if (params.addition) {\n    operators.push(\"+\");\n  }\n  if (params.substraction) {\n    operators.push(\"-\");\n  }\n  if (params.multiplication) {\n    operators.push(\"*\");\n  }\n  if (params.division) {\n    operators.push(\"/\");\n  }\n  return operators;\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getWrittenOperation(operation) {\n  operation = operation.replaceAll(\"+\", \" + \");\n  operation = operation.replaceAll(\"-\", \" - \");\n  operation = operation.replaceAll(\"( - \", \"(-\");\n  operation = operation.replaceAll(\"*\", \" x \");\n  operation = operation.replaceAll(\"/\", \" ÷ \");\n\n  return operation;\n}\n","import React, {\n  useEffect,\n  useState,\n  useCallback,\n  useRef,\n  useMemo,\n} from \"react\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst timerSize = \"200px\";\nconst timerSizeMobile = \"50px\";\nconst strokeWidth = \"7px\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({\n    position: \"relative\",\n    height: props.isMobile ? timerSizeMobile : timerSize,\n    width: props.isMobile ? timerSizeMobile : timerSize,\n  }),\n  rootCircle: {\n    fill: \"none\",\n    stroke: \"none\",\n  },\n  rootPathElapsed: {\n    strokeWidth,\n    stroke: theme.palette.primary.main,\n  },\n  rootLabel: (props) => ({\n    position: \"absolute\",\n    height: props.isMobile ? timerSizeMobile : timerSize,\n    width: props.isMobile ? timerSizeMobile : timerSize,\n    top: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"48px\",\n  }),\n  rootPathRemaining: {\n    strokeWidth,\n    strokeLinecap: \"round\",\n    transform: \"rotate(90deg)\",\n    transformOrigin: \"center\",\n    transition: \"1s linear all\",\n    stroke: \"currentcolor\",\n  },\n  green: {\n    color: theme.palette.success.main,\n  },\n  orange: { color: \"orange\" },\n  red: { color: theme.palette.error.main },\n  rootSvg: {\n    transform: \"scaleX(-1)\",\n  },\n}));\n\nexport default function TimerComponent(props) {\n  const classes = useStyles(props);\n\n  const fullDashArray = 283;\n  const warningThreshold = Math.floor(props.timeLimit / 3);\n  const alertThreshold = Math.floor(props.timeLimit / 6);\n\n  const colorCodes = useMemo(() => {\n    return {\n      info: {\n        color: \"green\",\n      },\n      warning: {\n        color: \"orange\",\n        threshold: warningThreshold,\n      },\n      alert: {\n        color: \"red\",\n        threshold: alertThreshold,\n      },\n    };\n  }, [warningThreshold, alertThreshold]);\n\n  const [remainingPathColor, setRemainingPathColorState] = useState(\n    colorCodes.info.color\n  );\n  const [strokeDashArray, setStrokeDashArray] = useState(283);\n  //   const [timeLeft, setTimeLeft] = useState(timeLimit);\n\n  let timerRunning = useRef(false);\n\n  let timerInterval = useRef(null);\n  let timePassed = useRef(0);\n\n  // Divides time left by the defined time limit.\n  const calculateTimeFraction = useCallback(() => {\n    const rawTimeFraction = props.timeLeft / props.timeLimit;\n    return rawTimeFraction - (1 / props.timeLimit) * (1 - rawTimeFraction);\n  }, [props.timeLeft, props.timeLimit]);\n\n  // Update the dasharray value as time passes, starting with 283\n  const setCircleDasharray = useCallback(() => {\n    const circleDasharray = `${(\n      calculateTimeFraction() * fullDashArray\n    ).toFixed(0)} 283`;\n\n    setStrokeDashArray(circleDasharray);\n  }, [calculateTimeFraction]);\n\n  const setRemainingPathColor = useCallback(() => {\n    const { alert, warning } = colorCodes;\n\n    if (props.timeLeft <= alert.threshold) {\n      setRemainingPathColorState(alert.color);\n    } else if (props.timeLeft <= warning.threshold) {\n      setRemainingPathColorState(warning.color);\n    }\n  }, [props.timeLeft, colorCodes]);\n\n  const startTimer = useCallback(() => {\n    timerRunning.current = true;\n\n    timerInterval.current = setInterval(() => {\n      // The amount of time passed increments by one\n      timePassed.current++;\n      props.setTimeLeft(props.timeLeft - timePassed.current);\n    }, 1000);\n  }, [props]);\n\n  useEffect(() => {\n    setCircleDasharray();\n    setRemainingPathColor(props.timeLeft);\n\n    if ((props.timeLeft === 0 && timerRunning.current) || props.end) {\n      clearInterval(timerInterval.current);\n      timerRunning.current = false;\n    }\n  }, [props.timeLeft, props.end, setCircleDasharray, setRemainingPathColor]);\n\n  useEffect(() => {\n    if (\n      props.start &&\n      !timerRunning.current &&\n      props.timeLeft > 0 &&\n      !props.end\n    ) {\n      startTimer();\n    }\n  }, [props.start, props.timeLeft, props.end, startTimer]);\n\n  function formatTime(time) {\n    // The largest round integer less than or equal to the result of time divided being by 60.\n    const minutes = Math.floor(time / 60);\n\n    // Seconds are the remainder of the time divided by 60 (modulus operator)\n    let seconds = time % 60;\n\n    // If the value of seconds is less than 10, then display seconds with a leading zero\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n\n    // The output in MM:SS format\n    return `${minutes}:${seconds}`;\n  }\n\n  return (\n    <div className={classes.root}>\n      {!props.isMobile ? (\n        <svg\n          className={classes.rootSvg}\n          viewBox=\"0 0 100 100\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g className={classes.rootCircle}>\n            <circle\n              className={classes.rootPathElapsed}\n              cx=\"50\"\n              cy=\"50\"\n              r=\"45\"\n            />\n            <path\n              id=\"base-timer-path-remaining\"\n              strokeDasharray={strokeDashArray}\n              className={`${classes.rootPathRemaining} ${classes[remainingPathColor]}`}\n              d=\"\n            M 50, 50\n            m -45, 0\n            a 45,45 0 1,0 90,0\n            a 45,45 0 1,0 -90,0\n          \"\n            ></path>\n          </g>\n        </svg>\n      ) : null}\n      <span\n        id=\"base-timer-label\"\n        className={classes.rootLabel}>\n        {formatTime(props.timeLeft)}\n      </span>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { Grid, Typography, Button, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport TimerComponent from \"./TimerComponent\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"sticky\",\n    top: \"-3%\",\n    padding: \"2%\",\n    // background: `url(${process.env.PUBLIC_URL}/chalkboard-green.png)`,\n    zIndex: 2,\n    width: \"100%\",\n  },\n  flexCenter: { display: \"flex\", justifyContent: \"center\" },\n  rowPadding: { paddingTop: \"3%\" },\n  stickyPadding: { paddingBottom: \"3%\" },\n  progressIndicator: { fontSize: \"36px\" },\n}));\n\nexport default function DashboardComponent(props) {\n  const classes = useStyles();\n  const [t] = useTranslation();\n\n  return (\n    <Box className={classes.root}>\n      <Grid\n        container\n        justifyContent=\"space-around\"\n        alignItems=\"center\">\n        <Grid\n          xs={12}\n          md={4}\n          item\n          order={{ xs: 2, sm: 1 }}\n          className={classes.stickyPadding}\n        >\n          {!props.isMobile || !props.params.isTime ? (\n            <span className={classes.progressIndicator}>\n              {props.operations.filter((o) => o.answer).length}/\n              {props.operations.length}\n            </span>\n          ) : null}\n          <LinearProgress\n            color=\"primary\"\n            variant=\"determinate\"\n            value={props.progress}\n          />\n        </Grid>\n        {props.params.isTime ? (\n          <Grid\n            item\n            xs={12}\n            md={4}\n            order={{ xs: 1, sm: 3 }}\n            className={classes.flexCenter + \" \" + classes.stickyPadding}\n          >\n            <TimerComponent\n              start={props.start}\n              end={props.end}\n              timeLimit={props.timeLimit}\n              timeLeft={props.timeLeft}\n              setTimeLeft={props.setTimeLeft}\n              isMobile={props.isMobile}\n            />\n          </Grid>\n        ) : null}\n        <Grid\n          item\n          xs={12}\n          md={4}\n          order={{ xs: 3, sm: 2 }}\n          className={\n            (props.isMobile ? classes.rowPadding : \"\") +\n            \" \" +\n            classes.stickyPadding\n          }\n        >\n          {props.end ? (\n            <Fragment>\n              <Button\n                variant=\"contained\"\n                component={Link}\n                to={\"/params\"}\n                color=\"primary\"\n              >\n                <Typography>{t(\"math.back\")}</Typography>\n              </Button>\n            </Fragment>\n          ) : props.start && props.countdownEnded && !props.end ? (\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              onClick={() => {\n                props.setEnd(true);\n                props.setOpenCompletedDialog(true);\n              }}\n            >\n              <Typography color=\"black\">{t(\"math.done\")}</Typography>\n            </Button>\n          ) : (\n            <Button\n              variant=\"contained\"\n              color=\"success\"\n              onClick={() => {\n                if (!props.countdonwnStart) {\n                  props.setCountdownStart(true);\n                }\n              }}\n            >\n              <Typography>{t(\"math.start\")}</Typography>\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Grow from \"@mui/material/Grow\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    zIndex: 3,\n    fontSize: 200,\n  },\n}));\n\nexport default function CountdownComponent(props) {\n  const classes = useStyles();\n  const [countdown, setCountdown] = useState();\n\n  useEffect(() => {\n    if (props.countdonwnStart) {\n      setCountdown(0);\n    }\n  }, [props.countdonwnStart]);\n\n  return (\n    <div className={classes.root}>\n      <Grow\n        in={countdown === 0}\n        timeout={500}\n        onEnter={() => {\n          setTimeout(() => {\n            setCountdown(null);\n          }, 1000);\n        }}\n        onExited={() => setCountdown(1)}\n        unmountOnExit\n      >\n        <div>3</div>\n      </Grow>\n      <Grow\n        in={countdown === 1}\n        timeout={500}\n        onEnter={() => {\n          setTimeout(() => {\n            setCountdown(null);\n          }, 1000);\n        }}\n        onExited={() => setCountdown(2)}\n        unmountOnExit\n      >\n        <div>2</div>\n      </Grow>\n      <Grow\n        in={countdown === 2}\n        timeout={500}\n        onEnter={() => {\n          setTimeout(() => {\n            setCountdown(null);\n          }, 1000);\n        }}\n        onExited={() => setCountdown(3)}\n        unmountOnExit\n      >\n        <div>1</div>\n      </Grow>\n      <Grow\n        in={countdown === 3}\n        timeout={500}\n        onEnter={() => {\n          setTimeout(() => {\n            setCountdown(null);\n          }, 1000);\n        }}\n        onExited={() => props.setCountdownEnded(true)}\n        unmountOnExit\n      >\n        <div>GO!</div>\n      </Grow>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  Slide,\n  Typography,\n} from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide\n    direction=\"up\"\n    ref={ref}\n    {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: { textAlign: \"center\" },\n  rightAnswers: {\n    fontSize: \"28px\",\n    color: theme.palette.success.main,\n  },\n  totalOperations: {\n    fontSize: \"28px\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport default function CompletedDialogComponent(props) {\n  const classes = useStyles();\n  const { i18n } = useTranslation();\n  const [t] = useTranslation();\n\n  const handleClose = () => {\n    props.setOpenCompletedDialog(false);\n  };\n\n  const rightAnswersText = () => {\n    const rightAnswers = props.operations.filter((o) => o.isRightAnswer).length;\n    const isSingular = (() => {\n      if (i18n.language === \"fr\") {\n        return rightAnswers <= 1;\n      } else {\n        return rightAnswers === 1;\n      }\n    })();\n\n    return (\n      <Fragment>\n        <span className={classes.rightAnswers}>{rightAnswers} </span>\n        {isSingular\n          ? t(\"completed.resultText2singular\")\n          : t(\"completed.resultText2plural\")}\n      </Fragment>\n    );\n  };\n\n  const remainingTimeText = () => {\n    const timeObj = secondsToTime(props.totalTime);\n\n    const hours =\n      timeObj.hours > 0\n        ? `${timeObj.hours} ${\n          timeObj.hours > 1 ? t(\"completed.hours\") : t(\"completed.hour\")\n        } `\n        : \"\";\n    const minutes =\n      timeObj.minutes > 0\n        ? `${timeObj.minutes} ${\n          timeObj.minutes > 1 ? t(\"completed.minutes\") : t(\"completed.minute\")\n        } `\n        : \"\";\n    const seconds = `${timeObj.seconds} ${\n      timeObj.seconds > 1 ? t(\"completed.seconds\") : t(\"completed.second\")\n    }`;\n\n    return hours + minutes + seconds;\n  };\n\n  const completedText = () => {\n    const rightAnswers = props.operations.filter((o) => o.isRightAnswer).length;\n    const totalMultiplier = 100 / props.operations.length;\n    const rightAnswersPourcentage = rightAnswers * totalMultiplier;\n\n    if (rightAnswersPourcentage === 100) {\n      return t(\"completed.done5\");\n    } else if (rightAnswersPourcentage >= 80) {\n      return t(\"completed.done4\");\n    } else if (rightAnswersPourcentage >= 60) {\n      return t(\"completed.done3\");\n    } else if (rightAnswersPourcentage >= 40) {\n      return t(\"completed.done2\");\n    } else if (rightAnswersPourcentage < 40) {\n      return t(\"completed.done1\");\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={props.openCompletedDialog}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-describedby=\"completed-dialog\"\n      >\n        <DialogContent className={classes.root}>\n          <Typography\n            color=\"primary\"\n            sx={{ fontSize: \"36px\" }}>\n            {t(\"completed.title\")}\n          </Typography>\n          <p>{t(\"completed.result\")}</p>\n          <p>\n            {t(\"completed.resultText1\")} {rightAnswersText()}{\" \"}\n            {t(\"completed.resultText3\")}{\" \"}\n            <span className={classes.totalOperations}>\n              {props.operations.length}\n            </span>\n            {props.isTime ? null : \"!\"}\n          </p>\n          {props.isTime ? (\n            <p>\n              {t(\"completed.resultText4\")}{\" \"}\n              <span className={classes.rightAnswers}>\n                {remainingTimeText()}\n              </span>\n              !\n            </p>\n          ) : null}\n          <Typography\n            color=\"primary\"\n            sx={{ fontSize: \"36px\" }}>\n            {completedText()}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={handleClose}>\n            <Typography>Ok</Typography>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nfunction secondsToTime(secs) {\n  var hours = Math.floor(secs / (60 * 60));\n\n  var divisor_for_minutes = secs % (60 * 60);\n  var minutes = Math.floor(divisor_for_minutes / 60);\n\n  var divisor_for_seconds = divisor_for_minutes % 60;\n  var seconds = Math.ceil(divisor_for_seconds);\n\n  var obj = {\n    hours,\n    minutes,\n    seconds,\n  };\n  return obj;\n}\n","import React, { useState, useRef } from \"react\";\nimport { Grid, TextField, Box } from \"@mui/material\";\nimport { alpha } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport Fab from \"@mui/material/Fab\";\nimport Fade from \"@mui/material/Fade\";\nimport { useTheme } from \"@emotion/react\";\n\nconst useStyles = makeStyles((theme) => ({\n  operation: { paddingBottom: \"15px\", display: \"flex\", alignItems: \"baseline\" },\n  answerBox: {\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    borderRadius: theme.shape.borderRadius,\n    transition: \"2s\",\n    padding: \"5px\",\n  },\n  rightAnswer: {\n    backgroundColor: alpha(theme.palette.success.main, 0.3),\n  },\n  wrongAnswer: {\n    backgroundColor: alpha(theme.palette.error.main, 0.3),\n  },\n  textFieldBox: {\n    width: \"90px\",\n    flex: \"0 0 auto\",\n  },\n  answerFabContainer: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n  },\n  negativeFab: {\n    position: \"absolute\",\n    right: \"10px\",\n    bottom: \"60px\",\n  },\n}));\n\nexport default function OperationsComponent(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [t] = useTranslation();\n  const [focusIndex, setFocusIndex] = useState(0);\n  const operationRefs = useRef([]);\n\n  const handleEnter = (event) => {\n    if (event.key.toLowerCase() === \"enter\") {\n      setFocusIndex(focusIndex + 1);\n      event.preventDefault();\n    }\n  };\n\n  function negativeNumber() {\n    const ref = operationRefs.current[focusIndex];\n    const currentValue = ref.value;\n    ref.value = currentValue ? Number(currentValue * -1) : Number(-1);\n    ref.focus();\n  }\n\n  return (\n    <form>\n      <Grid\n        container\n        justifyContent=\"space-around\"\n        alignItems=\"center\"\n        spacing={2}\n        className={classes.rowPadding}\n      >\n        {props.operations.map((o, i) => (\n          <Grid\n            item\n            key={\"operation-\" + i}\n            className={classes.operation}>\n            <Box\n              className={\n                !props.openCompletedDialog && props.end\n                  ? o.isRightAnswer\n                    ? classes.answerBox + \" \" + classes.rightAnswer\n                    : classes.answerBox + \" \" + classes.wrongAnswer\n                  : classes.answerBox\n              }\n            >\n              <Box>{o.operationText}</Box>\n              <Box>&nbsp;=&nbsp;</Box>\n              <Box className={classes.textFieldBox}>\n                <TextField\n                  id={\"input-\" + i}\n                  label={t(\"params.numberLabel\")}\n                  disabled={props.timeLeft === 0 || props.end}\n                  type=\"number\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  inputRef={(input) => {\n                    operationRefs.current[i] = input;\n                    if (input && focusIndex === i) {\n                      input.focus();\n                    }\n                  }}\n                  onKeyPress={(event) => {\n                    handleEnter(event);\n                  }}\n                  onFocus={(event) => {\n                    setFocusIndex(i);\n                    props.operationAnswer(event.target.value, o.id);\n                  }}\n                  onChange={(event) => {\n                    props.operationAnswer(event.target.value, o.id);\n                  }}\n                />\n              </Box>\n              <Fade\n                in={!props.openCompletedDialog && props.end && !o.isRightAnswer}\n                timeout={1000}\n              >\n                <Box className={classes.answerFabContainer}>\n                  <Fab\n                    variant=\"extended\"\n                    sx={{ backgroundColor: theme.palette.success.main }}\n                    size=\"small\"\n                    aria-label=\"answer\"\n                  >\n                    {o.rightAnswer}\n                  </Fab>\n                </Box>\n              </Fade>\n            </Box>\n          </Grid>\n        ))}\n        <Fade\n          in={\n            props.params.negativeNumbers &&\n            props.params.negativeButtonMobile &&\n            props.isMobile &&\n            !(props.timeLeft === 0 || props.end)\n          }\n          timeout={1000}\n        >\n          <Box className={classes.negativeFab}>\n            <Fab\n              color=\"secondary\"\n              aria-label=\"negative\"\n              sx={{ fontSize: \"48px\", fontWeight: \"bold\" }}\n              onClick={() => negativeNumber()}\n            >\n              -\n            </Fab>\n          </Box>\n        </Fade>\n      </Grid>\n    </form>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport Collapse from \"@mui/material/Collapse\";\nimport CountdownComponent from \"./CountdownComponent\";\nimport CompletedDialogComponent from \"./CompletedDialogComponent\";\nimport OperationsComponent from \"./OperationsComponent\";\n\nexport default function MathComponent(props) {\n  return (\n    <Fragment>\n      <CountdownComponent\n        countdonwnStart={props.countdonwnStart}\n        setCountdownEnded={props.setCountdownEnded}\n      />\n      <Collapse\n        in={props.start && props.countdownEnded}\n        timeout={props.isMobile ? 1500 : 700}\n      >\n        <OperationsComponent\n          operations={props.operations}\n          operationAnswer={props.operationAnswer}\n          timeLeft={props.timeLeft}\n          end={props.end}\n          params={props.params}\n          isMobile={props.isMobile}\n          openCompletedDialog={props.openCompletedDialog}\n        />\n      </Collapse>\n      <CompletedDialogComponent\n        openCompletedDialog={props.openCompletedDialog}\n        setOpenCompletedDialog={props.setOpenCompletedDialog}\n        operations={props.correctedOperations}\n        totalTime={props.timeLimit - props.timeLeft}\n        isTime={props.params.isTime}\n      />\n    </Fragment>\n  );\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { getOperations, getCorrectAnswers } from \"./services/MathService\";\nimport { hoursToSeconds, minutesToSeconds } from \"date-fns\";\nimport DashboardComponent from \"./DashboardComponent\";\nimport BaseComponent, { dashboard } from \"./BaseComponent\";\nimport MathComponent from \"./MathComponent\";\n\nexport default function MathWrapperComponent(props) {\n  const [operations] = useState(() => getOperations(props.params));\n  const [correctedOperations, setCorrectedOperations] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [start, setStart] = useState(false);\n  const [countdonwnStart, setCountdownStart] = useState(false);\n  const [countdownEnded, setCountdownEnded] = useState(false);\n  const timeLimit = getSeconds(props.params.time);\n  const [timeLeft, setTimeLeft] = useState(timeLimit);\n  const [openCompletedDialog, setOpenCompletedDialog] = useState(false);\n  const [end, setEnd] = useState(false);\n\n  function operationAnswer(value, id) {\n    operations.find((o) => o.id === id).answer = value;\n    setNewProgress();\n  }\n\n  function setNewProgress() {\n    const progressMultiplier = 100 / operations.length;\n    const currentProgress = operations.filter((o) => o.answer).length;\n    setProgress(currentProgress * progressMultiplier);\n  }\n\n  useEffect(() => {\n    if (countdownEnded) {\n      setStart(true);\n    }\n  }, [countdownEnded]);\n\n  useEffect(() => {\n    if (end) {\n      setCorrectedOperations(getCorrectAnswers(operations));\n    }\n  }, [end, operations]);\n\n  return (\n    <Fragment>\n      <BaseComponent\n        componentType={dashboard}\n        vh={\"25vh\"}\n        component={\n          <DashboardComponent\n            params={props.params}\n            operations={operations}\n            start={start}\n            countdonwnStart={countdonwnStart}\n            setCountdownStart={setCountdownStart}\n            countdownEnded={countdownEnded}\n            timeLimit={timeLimit}\n            timeLeft={timeLeft}\n            setTimeLeft={setTimeLeft}\n            setOpenCompletedDialog={setOpenCompletedDialog}\n            end={end}\n            setEnd={setEnd}\n            progress={progress}\n            isMobile={props.isMobile}\n          />\n        }\n      />\n      <BaseComponent\n        vh={\"55vh\"}\n        component={\n          <MathComponent\n            isMobile={props.isMobile}\n            params={props.params}\n            operations={operations}\n            operationAnswer={operationAnswer}\n            countdonwnStart={countdonwnStart}\n            countdownEnded={countdownEnded}\n            setCountdownEnded={setCountdownEnded}\n            start={start}\n            end={end}\n            timeLimit={timeLimit}\n            timeLeft={timeLeft}\n            openCompletedDialog={openCompletedDialog}\n            setOpenCompletedDialog={setOpenCompletedDialog}\n            correctedOperations={correctedOperations}\n          />\n        }\n      />\n    </Fragment>\n  );\n}\n\nfunction getSeconds(dateString) {\n  const date = new Date(dateString);\n  const dateHours = date.getHours();\n  const dateMinutes = date.getMinutes();\n  const dateSeconds = date.getSeconds();\n\n  const result =\n    hoursToSeconds(dateHours) + minutesToSeconds(dateMinutes) + dateSeconds;\n\n  return result;\n}\n"],"names":["chalkboard","dashboard","useStyles","makeStyles","theme","baseContainer","props","padding","marginTop","marginBottom","height","vh","chalkboardContainer","background","palette","backgroundAttachment","color","border","borderColor","borderRadius","shape","borderImage","process","borderImageOutset","overflow","boxShadow","transition","dashboardContainer","BaseComponent","classes","isForm","appliedTheme","createTheme","getTheme","FormWrapper","useCallback","formWrapper","children","className","container","justifyContent","alignItems","item","xs","sm","componentType","component","getOperations","params","operators","addition","push","substraction","multiplication","division","getOperators","operations","i","amount","operation","generateOperation","id","operationText","getWrittenOperation","generateOperations","operands","getOperand","getRandomOperator","validatedOperation","isNaN","evaluate","Infinity","negativeNumbers","validateOperation","operand","getRandomInt","maximum","toString","Number","length","min","max","Math","ceil","floor","random","replaceAll","timerSize","timerSizeMobile","root","position","isMobile","width","rootCircle","fill","stroke","rootPathElapsed","strokeWidth","primary","main","rootLabel","top","display","fontSize","rootPathRemaining","strokeLinecap","transform","transformOrigin","green","success","orange","red","error","rootSvg","TimerComponent","warningThreshold","timeLimit","alertThreshold","colorCodes","useMemo","info","warning","threshold","alert","useState","remainingPathColor","setRemainingPathColorState","strokeDashArray","setStrokeDashArray","timerRunning","useRef","timerInterval","timePassed","calculateTimeFraction","rawTimeFraction","timeLeft","setCircleDasharray","circleDasharray","toFixed","setRemainingPathColor","startTimer","current","setInterval","setTimeLeft","useEffect","end","clearInterval","start","viewBox","xmlns","cx","cy","r","strokeDasharray","d","time","minutes","seconds","formatTime","zIndex","flexCenter","rowPadding","paddingTop","stickyPadding","paddingBottom","progressIndicator","DashboardComponent","useTranslation","t","Box","Grid","md","order","isTime","filter","o","answer","LinearProgress","variant","value","progress","Fragment","Button","Link","to","Typography","countdownEnded","onClick","setEnd","setOpenCompletedDialog","countdonwnStart","setCountdownStart","left","CountdownComponent","countdown","setCountdown","Grow","in","timeout","onEnter","setTimeout","onExited","unmountOnExit","setCountdownEnded","Transition","React","ref","Slide","direction","textAlign","rightAnswers","totalOperations","CompletedDialogComponent","i18n","handleClose","Dialog","open","openCompletedDialog","TransitionComponent","keepMounted","onClose","DialogContent","sx","isRightAnswer","isSingular","language","rightAnswersText","timeObj","secs","hours","divisor_for_minutes","divisor_for_seconds","secondsToTime","totalTime","remainingTimeText","rightAnswersPourcentage","completedText","DialogActions","answerBox","rightAnswer","backgroundColor","alpha","wrongAnswer","textFieldBox","flex","answerFabContainer","right","negativeFab","bottom","OperationsComponent","useTheme","focusIndex","setFocusIndex","operationRefs","spacing","map","TextField","label","disabled","type","inputRef","input","focus","onKeyPress","event","key","toLowerCase","preventDefault","handleEnter","onFocus","operationAnswer","target","onChange","Fade","Fab","size","negativeButtonMobile","fontWeight","currentValue","negativeNumber","MathComponent","Collapse","correctedOperations","MathWrapperComponent","setCorrectedOperations","setProgress","setStart","dateString","date","Date","dateHours","getHours","dateMinutes","getMinutes","dateSeconds","getSeconds","hoursToSeconds","minutesToSeconds","getCorrectAnswers","find","progressMultiplier","currentProgress","setNewProgress"],"sourceRoot":""}